<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TrainingHelperDataSet" targetNamespace="http://tempuri.org/TrainingHelperDataSet.xsd" xmlns:mstns="http://tempuri.org/TrainingHelperDataSet.xsd" xmlns="http://tempuri.org/TrainingHelperDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TrainingHelperConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TrainingHelperConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LB4.Properties.Settings.GlobalReference.Default.TrainingHelperConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExerciseTableAdapter" GeneratorDataComponentClassName="ExerciseTableAdapter" Name="Exercise" UserDataComponentName="ExerciseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TrainingHelperConnectionString (Settings)" DbObjectName="TrainingHelper.dbo.Exercise" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Exercise] WHERE (([Exercise_Id] = @Original_Exercise_Id) AND ((@IsNull_Exercise_Name = 1 AND [Exercise_Name] IS NULL) OR ([Exercise_Name] = @Original_Exercise_Name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Exercise_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exercise_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Exercise_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exercise_Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Exercise_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Exercise_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Exercise] ([Exercise_Id], [Exercise_Name], [Exercise_Description]) VALUES (@Exercise_Id, @Exercise_Name, @Exercise_Description);
SELECT Exercise_Id, Exercise_Name, Exercise_Description FROM Exercise WHERE (Exercise_Id = @Exercise_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Exercise_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exercise_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Exercise_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Exercise_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Exercise_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Exercise_Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Exercise_Id, Exercise_Name, Exercise_Description FROM Exercise</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Exercise] SET [Exercise_Id] = @Exercise_Id, [Exercise_Name] = @Exercise_Name, [Exercise_Description] = @Exercise_Description WHERE (([Exercise_Id] = @Original_Exercise_Id) AND ((@IsNull_Exercise_Name = 1 AND [Exercise_Name] IS NULL) OR ([Exercise_Name] = @Original_Exercise_Name)));
SELECT Exercise_Id, Exercise_Name, Exercise_Description FROM Exercise WHERE (Exercise_Id = @Exercise_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Exercise_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exercise_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Exercise_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Exercise_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Exercise_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Exercise_Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Exercise_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exercise_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Exercise_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exercise_Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Exercise_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Exercise_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Exercise_Id" DataSetColumn="Exercise_Id" />
              <Mapping SourceColumn="Exercise_Name" DataSetColumn="Exercise_Name" />
              <Mapping SourceColumn="Exercise_Description" DataSetColumn="Exercise_Description" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Exercise_MuscleTableAdapter" GeneratorDataComponentClassName="Exercise_MuscleTableAdapter" Name="Exercise_Muscle" UserDataComponentName="Exercise_MuscleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TrainingHelperConnectionString (Settings)" DbObjectName="TrainingHelper.dbo.Exercise_Muscle" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Exercise_Muscle] WHERE (([Exercise_Id] = @Original_Exercise_Id) AND ([Muscle_Id] = @Original_Muscle_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Exercise_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exercise_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Muscle_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Muscle_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Exercise_Muscle] ([Exercise_Id], [Muscle_Id]) VALUES (@Exercise_Id, @Muscle_Id);
SELECT Exercise_Id, Muscle_Id FROM Exercise_Muscle WHERE (Exercise_Id = @Exercise_Id) AND (Muscle_Id = @Muscle_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Exercise_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exercise_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Muscle_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Muscle_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Exercise_Id, Muscle_Id FROM dbo.Exercise_Muscle</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Exercise_Muscle] SET [Exercise_Id] = @Exercise_Id, [Muscle_Id] = @Muscle_Id WHERE (([Exercise_Id] = @Original_Exercise_Id) AND ([Muscle_Id] = @Original_Muscle_Id));
SELECT Exercise_Id, Muscle_Id FROM Exercise_Muscle WHERE (Exercise_Id = @Exercise_Id) AND (Muscle_Id = @Muscle_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Exercise_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exercise_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Muscle_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Muscle_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Exercise_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exercise_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Muscle_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Muscle_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Exercise_Id" DataSetColumn="Exercise_Id" />
              <Mapping SourceColumn="Muscle_Id" DataSetColumn="Muscle_Id" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="TrainingHelperConnectionString (Settings)" DbObjectName="TrainingHelper.dbo.Exercise_Muscle" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Exercise_Id, Muscle_Id FROM dbo.Exercise_Muscle</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MuscleTableAdapter" GeneratorDataComponentClassName="MuscleTableAdapter" Name="Muscle" UserDataComponentName="MuscleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TrainingHelperConnectionString (Settings)" DbObjectName="TrainingHelper.dbo.Muscle" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Muscle] WHERE (([Muscle_Id] = @Original_Muscle_Id) AND ((@IsNull_Muscle_Name = 1 AND [Muscle_Name] IS NULL) OR ([Muscle_Name] = @Original_Muscle_Name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Muscle_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Muscle_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Muscle_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Muscle_Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Muscle_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Muscle_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Muscle] ([Muscle_Id], [Muscle_Name]) VALUES (@Muscle_Id, @Muscle_Name);
SELECT Muscle_Id, Muscle_Name FROM Muscle WHERE (Muscle_Id = @Muscle_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Muscle_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Muscle_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Muscle_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Muscle_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Muscle_Id, Muscle_Name FROM dbo.Muscle</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Muscle] SET [Muscle_Id] = @Muscle_Id, [Muscle_Name] = @Muscle_Name WHERE (([Muscle_Id] = @Original_Muscle_Id) AND ((@IsNull_Muscle_Name = 1 AND [Muscle_Name] IS NULL) OR ([Muscle_Name] = @Original_Muscle_Name)));
SELECT Muscle_Id, Muscle_Name FROM Muscle WHERE (Muscle_Id = @Muscle_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Muscle_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Muscle_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Muscle_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Muscle_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Muscle_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Muscle_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Muscle_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Muscle_Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Muscle_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Muscle_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Muscle_Id" DataSetColumn="Muscle_Id" />
              <Mapping SourceColumn="Muscle_Name" DataSetColumn="Muscle_Name" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="TrainingHelperConnectionString (Settings)" DbObjectName="TrainingHelper.dbo.Muscle" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Muscle_Id, Muscle_Name FROM dbo.Muscle</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TrainingHelperDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="TrainingHelperDataSet" msprop:Generator_UserDSName="TrainingHelperDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Exercise" msprop:Generator_TableClassName="ExerciseDataTable" msprop:Generator_TableVarName="tableExercise" msprop:Generator_TablePropName="Exercise" msprop:Generator_RowDeletingName="ExerciseRowDeleting" msprop:Generator_RowChangingName="ExerciseRowChanging" msprop:Generator_RowEvHandlerName="ExerciseRowChangeEventHandler" msprop:Generator_RowDeletedName="ExerciseRowDeleted" msprop:Generator_UserTableName="Exercise" msprop:Generator_RowChangedName="ExerciseRowChanged" msprop:Generator_RowEvArgName="ExerciseRowChangeEvent" msprop:Generator_RowClassName="ExerciseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Exercise_Id" msprop:Generator_ColumnVarNameInTable="columnExercise_Id" msprop:Generator_ColumnPropNameInRow="Exercise_Id" msprop:Generator_ColumnPropNameInTable="Exercise_IdColumn" msprop:Generator_UserColumnName="Exercise_Id" type="xs:int" />
              <xs:element name="Exercise_Name" msprop:Generator_ColumnVarNameInTable="columnExercise_Name" msprop:Generator_ColumnPropNameInRow="Exercise_Name" msprop:Generator_ColumnPropNameInTable="Exercise_NameColumn" msprop:Generator_UserColumnName="Exercise_Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Exercise_Description" msprop:Generator_ColumnVarNameInTable="columnExercise_Description" msprop:Generator_ColumnPropNameInRow="Exercise_Description" msprop:Generator_ColumnPropNameInTable="Exercise_DescriptionColumn" msprop:Generator_UserColumnName="Exercise_Description" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Exercise_Muscle" msprop:Generator_TableClassName="Exercise_MuscleDataTable" msprop:Generator_TableVarName="tableExercise_Muscle" msprop:Generator_TablePropName="Exercise_Muscle" msprop:Generator_RowDeletingName="Exercise_MuscleRowDeleting" msprop:Generator_RowChangingName="Exercise_MuscleRowChanging" msprop:Generator_RowEvHandlerName="Exercise_MuscleRowChangeEventHandler" msprop:Generator_RowDeletedName="Exercise_MuscleRowDeleted" msprop:Generator_UserTableName="Exercise_Muscle" msprop:Generator_RowChangedName="Exercise_MuscleRowChanged" msprop:Generator_RowEvArgName="Exercise_MuscleRowChangeEvent" msprop:Generator_RowClassName="Exercise_MuscleRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Exercise_Id" msprop:Generator_ColumnVarNameInTable="columnExercise_Id" msprop:Generator_ColumnPropNameInRow="Exercise_Id" msprop:Generator_ColumnPropNameInTable="Exercise_IdColumn" msprop:Generator_UserColumnName="Exercise_Id" type="xs:int" />
              <xs:element name="Muscle_Id" msprop:Generator_ColumnVarNameInTable="columnMuscle_Id" msprop:Generator_ColumnPropNameInRow="Muscle_Id" msprop:Generator_ColumnPropNameInTable="Muscle_IdColumn" msprop:Generator_UserColumnName="Muscle_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Muscle" msprop:Generator_TableClassName="MuscleDataTable" msprop:Generator_TableVarName="tableMuscle" msprop:Generator_TablePropName="Muscle" msprop:Generator_RowDeletingName="MuscleRowDeleting" msprop:Generator_RowChangingName="MuscleRowChanging" msprop:Generator_RowEvHandlerName="MuscleRowChangeEventHandler" msprop:Generator_RowDeletedName="MuscleRowDeleted" msprop:Generator_UserTableName="Muscle" msprop:Generator_RowChangedName="MuscleRowChanged" msprop:Generator_RowEvArgName="MuscleRowChangeEvent" msprop:Generator_RowClassName="MuscleRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Muscle_Id" msprop:Generator_ColumnVarNameInTable="columnMuscle_Id" msprop:Generator_ColumnPropNameInRow="Muscle_Id" msprop:Generator_ColumnPropNameInTable="Muscle_IdColumn" msprop:Generator_UserColumnName="Muscle_Id" type="xs:int" />
              <xs:element name="Muscle_Name" msprop:Generator_ColumnVarNameInTable="columnMuscle_Name" msprop:Generator_ColumnPropNameInRow="Muscle_Name" msprop:Generator_ColumnPropNameInTable="Muscle_NameColumn" msprop:Generator_UserColumnName="Muscle_Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Exercise" />
      <xs:field xpath="mstns:Exercise_Id" />
    </xs:unique>
    <xs:unique name="Exercise_Muscle_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Exercise_Muscle" />
      <xs:field xpath="mstns:Exercise_Id" />
      <xs:field xpath="mstns:Muscle_Id" />
    </xs:unique>
    <xs:unique name="Muscle_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Muscle" />
      <xs:field xpath="mstns:Muscle_Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Exercise_Muscle_Exercise" msdata:parent="Exercise" msdata:child="Exercise_Muscle" msdata:parentkey="Exercise_Id" msdata:childkey="Exercise_Id" msprop:Generator_UserChildTable="Exercise_Muscle" msprop:Generator_ChildPropName="GetExercise_MuscleRows" msprop:Generator_UserRelationName="FK_Exercise_Muscle_Exercise" msprop:Generator_ParentPropName="ExerciseRow" msprop:Generator_RelationVarName="relationFK_Exercise_Muscle_Exercise" msprop:Generator_UserParentTable="Exercise" />
      <msdata:Relationship name="FK_Exercise_Muscle_Muscle" msdata:parent="Muscle" msdata:child="Exercise_Muscle" msdata:parentkey="Muscle_Id" msdata:childkey="Muscle_Id" msprop:Generator_UserChildTable="Exercise_Muscle" msprop:Generator_ChildPropName="GetExercise_MuscleRows" msprop:Generator_UserRelationName="FK_Exercise_Muscle_Muscle" msprop:Generator_RelationVarName="relationFK_Exercise_Muscle_Muscle" msprop:Generator_UserParentTable="Muscle" msprop:Generator_ParentPropName="MuscleRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>